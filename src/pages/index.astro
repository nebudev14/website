---
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import "../styles/global.css";
---

<!doctype html>
<html lang="en" class="h-screen bg-zinc-900 text-zinc-100">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<!-- <Header /> -->
		<main class="w-full px-24 py-16">
			<button
				id="theme-toggle"
				class="fixed top-4 right-4 p-2 rounded-lg bg-zinc-800 hover:bg-zinc-700 transition-colors duration-200"
			>
				<svg
					id="sun-icon"
					class="w-6 h-6 hidden"
					fill="currentColor"
					viewBox="0 0 20 20"
				>
					<path
						d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
					></path>
				</svg>
				<svg
					id="moon-icon"
					class="w-6 h-6"
					fill="#fff"
					viewBox="0 0 20 20"
				>
					<path
						d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
					></path>
				</svg>
			</button>
			<div class="flex items-center justify-between">
				<div class="flex-grow max-w-3xl text-xl">
					<h1 class="md:text-7xl text-4xl text-zinc-50">
						hi, i'm warren!
					</h1>
					<p>
						i'm a <span id="typing-text"></span> from nyc. i currently
						attend <strong>wpi</strong>, where i study <strong
							>computer science</strong
						> and <strong>robotics engineering</strong>.
					</p>
					<p>
						my interests lie in the intersection of <strong
							>optimization</strong
						>, <strong>control theory</strong>, and <strong
							>machine learning</strong
						>. i aim to research methods of controlling various <strong
							>dynamical systems</strong
						>, and work towards a world where we live with <a
							class="underline"
							href="https://www.youtube.com/watch?v=-e1_QhJ1EhQ"
							target="_blank"
							rel="noopener noreferrer">cool-looking robots</a
						>.
					</p>
					<p>
						nowadays, i fly around the country to compete in <strong
							>hackathons</strong
						> (10x winnerüèÜ), work on autonomous drones at wpi's <a
							class="underline"
							href="https://acp-lab.github.io/acplab-web/"
							target="_blank"
							rel="noopener noreferrer"
							><strong>acp lab</strong></a
						>, and am a flight reliability software engineering
						intern at <strong>spacex</strong>.
					</p>
				</div>
				<div class="mt-8 hidden md:block">
					<img
						src="/warren-pfp.png"
						alt="Warren's profile picture"
						class="w-52 h-52 rounded-full"
					/>
				</div>
			</div>
			<div class="flex items-center justify-between text-xl">
				<div class="flex-grow max-w-5xl">
					<h1 class="text-4xl">previously i...</h1>
					<ul class="list-disc list-inside">
						<li>
							led a <a
								href="https://www.youtube.com/watch?v=Q2C3_wkqsVw"
								target="_blank"
								rel="noopener noreferrer"
								class="underline">competitive robotics team</a
							> in high school
						</li>
						<li>
							won <a
								href="https://devpost.com/software/talktuahbank"
								target="_blank"
								rel="noopener noreferrer"
								class="underline">1st place</a
							> at one of the country's largest hackathons
						</li>
						<li>
							taught embedded security to high school students @ <a
								href="https://bwsi.mit.edu/"
								target="_blank"
								rel="noopener noreferrer"
								class="underline">mit</a
							>
						</li>
					</ul>
				</div>
			</div>
			<div class="flex gap-4 mt-8">
				<a
					href="https://www.linkedin.com/in/warren-yun/"
					target="_blank"
					rel="noopener noreferrer"
					class="text-zinc-400 hover:text-zinc-200 transition-colors duration-200"
				>
					<svg
						class="w-8 h-8"
						fill="currentColor"
						viewBox="0 0 24 24"
						aria-hidden="true"
					>
						<path
							d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
						></path>
					</svg>
				</a>
				<a
					href="https://github.com/nebudev14"
					target="_blank"
					rel="noopener noreferrer"
					class="text-zinc-400 hover:text-zinc-200 transition-colors duration-200"
				>
					<svg
						class="w-8 h-8"
						fill="currentColor"
						viewBox="0 0 24 24"
						aria-hidden="true"
					>
						<path
							fill-rule="evenodd"
							d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z"
							clip-rule="evenodd"></path>
					</svg>
				</a>
				<a
					href="https://x.com/nebudev14"
					target="_blank"
					rel="noopener noreferrer"
					class="text-zinc-400 hover:text-zinc-200 transition-colors duration-200"
				>
					<svg
						class="w-8 h-8"
						fill="currentColor"
						viewBox="0 0 24 24"
						aria-hidden="true"
					>
						<path
							d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"
						></path>
					</svg>
				</a>
				<a
					href="https://devpost.com/NebuDev14"
					target="_blank"
					rel="noopener noreferrer"
					class="text-zinc-400 hover:text-zinc-200 transition-colors duration-200"
				>
					<svg
						class="w-8 h-8"
						fill="currentColor"
						viewBox="0 0 24 24"
						aria-hidden="true"
					>
						<path
							d="M6.002 1.61L0 12.004L6.002 22.39h11.996L24 12.004L17.998 1.61zm1.593 4.084h3.947c3.605 0 6.276 1.695 6.276 6.31c0 4.436-3.21 6.302-6.456 6.302H7.595zm2.517 2.449v7.714h1.241c2.646 0 3.862-1.55 3.862-3.861c.009-2.569-1.096-3.853-3.767-3.853z"
						></path>
					</svg>
				</a>
			</div>
			<div class="mt-8">
				<h1 class="text-sm">
					enjoy some cool quadrotor simulations using an MPC
					controller i wrote
				</h1>
				<iframe
					class="mb-4"
					src="https://app.rerun.io/version/0.22.0/index.html?url=https://www.wyun.sh/mpc.rrd"
					width="100%"
					height="720px"></iframe>
			</div>
		
			<p class="mt-8 md:text-lg text-sm text-zinc-300" id="contact-text">
				want to work with me? contact me at <code
					class="bg-zinc-800 px-2 py-1 rounded border border-zinc-700"
					>wyun2006 [at] gmail [dot] com</code
				>
			</p>
		</main>
	</body>
</html>

<script>
	const html = document.documentElement;
	const themeToggle = document.getElementById("theme-toggle");
	const sunIcon = document.getElementById("sun-icon");
	const moonIcon = document.getElementById("moon-icon");
	const contactText = document.getElementById("contact-text");
	console.log(sunIcon);
	const getPreferredTheme = () => {
		const savedTheme = localStorage.getItem("theme");
		if (savedTheme) {
			return savedTheme;
		}
		return window.matchMedia("(prefers-color-scheme: dark)").matches
			? "dark"
			: "light";
	};

	const setTheme = (theme: string) => {
		if (theme === "light") {
			html.classList.remove("bg-zinc-900", "text-zinc-100");
			html.classList.add("bg-zinc-50", "text-zinc-900");
			sunIcon?.classList.add("hidden");
			moonIcon?.classList.remove("hidden");
			contactText?.classList.remove(
				"text-zinc-300",
				"border",
				"border-zinc-700",
			);
		} else {
			html.classList.add("bg-zinc-900", "text-zinc-100");
			html.classList.remove("bg-zinc-50", "text-zinc-900");
			sunIcon?.classList.remove("hidden");
			moonIcon?.classList.add("hidden");
			contactText?.classList.add("text-zinc-300");
		}
		localStorage.setItem("theme", theme);
	};

	// Set initial theme
	setTheme(getPreferredTheme());

	// Add click handler
	themeToggle?.addEventListener("click", () => {
		const currentTheme =
			localStorage.getItem("theme") || getPreferredTheme();
		setTheme(currentTheme === "dark" ? "light" : "dark");
	});

	window
		.matchMedia("(prefers-color-scheme: dark)")
		.addEventListener("change", (e) => {
			setTheme(e.matches ? "dark" : "light");
		});

	const texts = [
		"full-stack software engineer",
		"robotics researcher",
		"hackathon tryhard",
		"redbull addict",
	];
	let currentIndex = 0;
	let isDeleting = false;
	let charIndex = 0;
	let typingDelay = 100;
	let deletingDelay = 50;
	let newTextDelay = 2000;

	function typeText() {
		const element = document.getElementById("typing-text");
		if (!element) return;

		const currentText = texts[currentIndex];

		if (isDeleting) {
			element.textContent = currentText.substring(0, charIndex - 1);
			charIndex--;

			if (charIndex === 0) {
				isDeleting = false;
				currentIndex = (currentIndex + 1) % texts.length;
				setTimeout(typeText, newTextDelay);
				return;
			}

			setTimeout(typeText, deletingDelay);
		} else {
			element.textContent = currentText.substring(0, charIndex + 1);
			charIndex++;

			if (charIndex === currentText.length) {
				isDeleting = true;
				setTimeout(typeText, newTextDelay);
				return;
			}

			setTimeout(typeText, typingDelay);
		}
	}

	window.addEventListener("DOMContentLoaded", () => {
		setTimeout(typeText, newTextDelay);
	});
</script>
